void		*mlx;
	void		*mlx_win;

	(void)mlx_win;
	mlx = mlx_init();
	mlx_win = mlx_new_window(mlx, 500, 500 , "Unreal Engine 6");
	mlx_loop(mlx);



  float 	x;
	float 	y;
	float	w;
	float	h;
	void	*mlx;
	void	*mlx_win;

	(void)mlx;
	(void)mlx_win;
	(void)ac;
	(void)av;
	(void)envp;
	
	x = 500;
	y = x;

	w = h = x;
	mlx = mlx_init();
	mlx_win = mlx_new_window(mlx, w, h, "Unreal Engine 6");
	int i = 0;
	int j;
	while(i < y)
	{
		j = 0;
		while(j++ < x)
		{
			if(j > 100 && j < 200 && i > 50 && i < 150)
				mlx_pixel_put(mlx, mlx_win, j, i, 0xaaffff);
			else
				mlx_pixel_put(mlx, mlx_win, j, i, 0xddccaa);
			
		}
		i++;
	}
	mlx_loop(mlx);





// void	lights(t_light **li, char *filename)
// {
// 	int		fd;
//     int     i;
//     int     vec1;
// 	char	*line;
//     char    **split;
//     char    **div;
//     split = NULL;
// 	fd = open(filename, O_RDONLY);
// 	line = get_next_line(fd);
//     while (line)
//     {
//         split = ft_split(line, ' ');
//         if (ft_strcmp(split[0], "L") == 0 || ft_strcmp(split[0], "l") == 0)
//         {
//             (*li) = (t_light *)ft_calloc(4, sizeof(t_light));
//             i = 0;
//             vec1 = 0;
//             while (split[++i])
//             {
//                 if (ft_strchr(split[i], ',') && vec1 == 0)
//                 {
//                     div = ft_split(split[i], ',');
//                     (*li)->cord = (t_vec3 *)ft_calloc(3, sizeof(t_vec3));
//                     (*li)->cord->x = ft_atof(div[0]);
//                     (*li)->cord->y = ft_atof(div[1]);
//                     (*li)->cord->y = ft_atof(div[2]);
//                     free_char_pp(&div);
//                     vec1++;
//                 }
//                 else if (ft_strchr(split[i], ',') && vec1 == 1)
//                 {
//                     div = ft_split(split[i], ',');
//                     (*li)->rgb = (t_col *)ft_calloc(3, sizeof(t_col));
//                     (*li)->rgb->r = ft_atof(div[0]);
//                     (*li)->rgb->g = ft_atof(div[1]);
//                     (*li)->rgb->b = ft_atof(div[2]);
//                     free_char_pp(&div);
//                     vec1++;
//                 }
//                 else
//                     (*li)->brightness = ft_atof(split[i]);
//             }
//             li = &(*li)->next;
//         }
//         free_char_pp(&split);
//         free(line);
//         line = get_next_line(fd);
//     }
// }
